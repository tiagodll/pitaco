name: .NET

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_and_deploy:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'

      - name: Build with dotnet
        run: dotnet build src/Pitaco.Server/ --configuration Release

      - name: dotnet publish
        run: dotnet publish src/Pitaco.Server/ -c Release -o ./publish
      
      - name: copy published files
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SOURCE: "publish/"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: ${{ secrets.REMOTE_TARGET }}
          
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/staging.key
          chmod 600 ~/.ssh/staging.key
          cat >>~/.ssh/config <<END
          Host staging
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/staging.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.REMOTE_USER }}
          SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_HOST: ${{ secrets.REMOTE_HOST }}

      - name: Stop the server
        run: ssh staging 'sudo docker stop pitaco'

      - name: Check out the source
        run: ssh staging 'sudo docker build -t pitaco . --rm'

      - name: Start the server
        if: ${{ always() }}
        run: |
          ssh staging 'sudo docker run -p ${{ secrets.PORT }}:${{ secrets.PORT }} -t \
              --env ASPNETCORE_ENVIRONMENT=Production \
              --env ASPNETCORE_URLS=http://+:${{ secrets.PORT }} \
              --env CONNECTION_STRING="${{ secrets.CONNECTION_STRING }}" \
              --name pitaco -d --restart unless-stopped -it pitaco'

